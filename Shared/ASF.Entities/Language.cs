//====================================================================================================
// Base code generated with LeatherGoods
// Architecture Solutions Foundation
//
// Generated by academic at LeatherGoods V 1.0 
//====================================================================================================

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Linq;
using System.Runtime.Serialization;
using System.Globalization;

namespace ASF.Entities
{
    /// <summary>
    /// Represents a row of entity data.
    /// </summary>
    [Serializable]
    [DataContract]
    public partial class Language : EntityBase
    {
        [DataMember]
        [DisplayName("Id")]
        [Browsable(false)]
        public int Id { get; set; }

        /// <summary>
        /// Nombre descriptivo del idioma Ej: EspaÃ±ol - Argentina
        /// </summary>
        [DataMember]
        [DisplayName("Name")]
        public string Name { get; set; }

        /// <summary>
        /// Nombre de la cultura. Ej: es-AR
        /// </summary>
        [DataMember]
        [DisplayName("Language Culture")]
        public string LanguageCulture { get; set; }

        /// <summary>
        /// Nombre de la imagen de la bandera de la cultura. Ej: argentina.jpg
        /// </summary>
        [DataMember]
        [DisplayName("Flag Image File Name")]
        public string FlagImageFileName { get; set; }

        /// <summary>
        /// Indica si el idioma se lee de derecha a izquierda.
        /// </summary>
        /// <remarks>
        /// ProTip: Podes sacar las imagenes de las banderas de acÃ¡ http://www.famfamfam.com/lab/icons/flags/
        /// </remarks>
        [DataMember]
        [DisplayName("Right to Left")]
        public bool RightToLeft { get; set; }

        public Language() { }

        /// <summary>
        /// Forma facil de crear idiomas a travÃ©s de culturas.
        /// </summary>
        /// <param name="culture">Cultura del idioma</param>
        /// <param name="FlagImageFileName">Nombre de la imagen que contiene la bandera del idioma</param>
        public Language(CultureInfo culture, string FlagImageFileName = null)
        {
            this.Name = culture.DisplayName;
            this.LanguageCulture = culture.Name;
            this.RightToLeft = culture.TextInfo.IsRightToLeft;

            this.FlagImageFileName = FlagImageFileName;
        }

        /// <summary>
        /// Obtiene la cultura a la que hace referencia.
        /// </summary>
        public CultureInfo GetCulture
        {
            get { return new CultureInfo(this.LanguageCulture); }
        }

    }
}
