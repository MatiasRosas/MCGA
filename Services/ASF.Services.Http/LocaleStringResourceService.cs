//====================================================================================================
// Base code generated with LeatherGoods - ASF.Services.Http
// Architecture Solutions Foundation
//
// Generated by academic at LeatherGoods V 1.0 
//====================================================================================================

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Net;
using System.Net.Http;
using System.Web.Http;
using ASF.Business;
using ASF.Entities;
using ASF.Services.Contracts;

namespace ASF.Services.Http
{
    /// <summary>
    /// LocaleStringResource HTTP service controller.
    /// </summary>
    [RoutePrefix("rest/LocStr")]

    public class LocaleStringResourceService : ApiController
    {

        [HttpPost]
        [Route("Add")]
        public LocaleStringResource Add(LocaleStringResource locstr)
        {
            try
            {
                var bls = new LocaleStringResourceBusiness();
                return bls.Add(locstr);
            }
            catch (Exception ex)
            {
                var httpError = new HttpResponseMessage()
                {
                    StatusCode = (HttpStatusCode)422,
                    ReasonPhrase = ex.Message
                };

                throw new HttpResponseException(httpError);
            }
        }

        [HttpGet]
        [Route("All")]
        public AllResponseLocaleStringResource All()
        {
            try
            {
                var response = new AllResponseLocaleStringResource();
                var bls = new LocaleStringResourceBusiness();
                response.Result = bls.All();
                return response;
            }
            catch (Exception ex)
            {
                var httpError = new HttpResponseMessage()
                {
                    StatusCode = (HttpStatusCode)422,
                    ReasonPhrase = ex.Message
                };

                throw new HttpResponseException(httpError);
            }
        }

        [HttpPost]
        [Route("Edit")]
        public void Edit(LocaleStringResource locstr)
        {
            try
            {
                var bls = new LocaleStringResourceBusiness();
                bls.Edit(locstr);
            }
            catch (Exception ex)
            {
                var httpError = new HttpResponseMessage()
                {
                    StatusCode = (HttpStatusCode)422,
                    ReasonPhrase = ex.Message
                };

                throw new HttpResponseException(httpError);
            }
        }

        [HttpGet]
        [Route("Find/{id}")]
        public FindResponseLocaleStringResource Find(int id)
        {
            try
            {
                var response = new FindResponseLocaleStringResource();
                var bls = new LocaleStringResourceBusiness();
                response.Result = bls.Find(id);
                return response;
            }
            catch (Exception ex)
            {
                var httpError = new HttpResponseMessage()
                {
                    StatusCode = (HttpStatusCode)422,
                    ReasonPhrase = ex.Message
                };

                throw new HttpResponseException(httpError);
            }
        }

        [HttpGet]
        [Route("Remove/{id}")]
        public void Remove(int id)
        {
            try
            {
                var bls = new LocaleStringResourceBusiness();
                bls.Remove(id);
            }
            catch (Exception ex)
            {
                var httpError = new HttpResponseMessage()
                {
                    StatusCode = (HttpStatusCode)422,
                    ReasonPhrase = ex.Message
                };

                throw new HttpResponseException(httpError);
            }
        }

    }
}
